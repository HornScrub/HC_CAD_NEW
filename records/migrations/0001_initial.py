# Generated by Django 5.1.6 on 2025-03-26 02:32

import django.db.models.deletion
import records.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('calls', '0004_call_assigned_units'),
        ('units', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('apartment', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(default='USA', max_length=50)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DriversLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=20, unique=True)),
                ('state_issued', models.CharField(blank=True, max_length=20, null=True)),
                ('issue_date', models.CharField(blank=True, max_length=20, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('discriminator', models.CharField(blank=True, max_length=20, null=True)),
                ('license_class', models.CharField(blank=True, max_length=20, null=True)),
                ('endorsement_date', models.DateField(blank=True, null=True)),
                ('restriction', models.CharField(blank=True, max_length=20, null=True)),
                ('organ_donor', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=40, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=40, null=True)),
                ('last_name', models.CharField(blank=True, max_length=40, null=True)),
                ('sex', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('height_cm', models.IntegerField(blank=True, null=True)),
                ('weight_kg', models.IntegerField(blank=True, null=True)),
                ('eye_color', models.CharField(blank=True, max_length=20, null=True)),
                ('address_on_license', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='license_holders', to='records.address')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_uid', models.CharField(default=records.models.generate_subject_uid, editable=False, max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=40)),
                ('middle_name', models.CharField(blank=True, max_length=40, null=True)),
                ('last_name', models.CharField(max_length=40)),
                ('aliases', models.JSONField(blank=True, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email_primary', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('email_secondary', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number_primary', models.CharField(blank=True, max_length=15, null=True)),
                ('phone_number_primary_type', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=20, null=True)),
                ('height_cm', models.IntegerField(blank=True, null=True, verbose_name='Height (cm)')),
                ('weight_kg', models.IntegerField(blank=True, null=True, verbose_name='Weight (kg)')),
                ('eye_color', models.CharField(blank=True, max_length=20, null=True)),
                ('has_distinguishing_features', models.BooleanField(default=False)),
                ('distinguishing_features', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField()),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('employer', models.CharField(blank=True, max_length=100, null=True)),
                ('is_5150', models.BooleanField(default=False)),
                ('medical_conditions', models.TextField(blank=True, null=True)),
                ('mental_health_history', models.TextField(blank=True, null=True)),
                ('phone_number_associated', models.CharField(blank=True, max_length=15, null=True)),
                ('has_active_warrants', models.BooleanField(default=False)),
                ('active_warrants', models.TextField(blank=True, null=True)),
                ('warrant_history', models.TextField(blank=True, null=True)),
                ('on_probation', models.BooleanField(default=False)),
                ('has_criminal_history', models.BooleanField(default=False, null=True)),
                ('criminal_history_primary', models.TextField(blank=True, null=True)),
                ('acquaintances_with', models.ManyToManyField(blank=True, related_name='acquaintances', to='records.subject')),
                ('addresses_associated', models.ManyToManyField(blank=True, related_name='associated_residents', to='records.address')),
                ('child_of', models.ManyToManyField(blank=True, related_name='parents', to='records.subject')),
                ('coworkers_with', models.ManyToManyField(blank=True, related_name='coworkers', to='records.subject')),
                ('drivers_license', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects', to='records.driverslicense')),
                ('employer_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_address', to='records.address')),
                ('employer_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee', to='records.subject')),
                ('family_of', models.ManyToManyField(blank=True, related_name='family_members', to='records.subject')),
                ('friends_with', models.ManyToManyField(blank=True, related_name='friends', to='records.subject')),
                ('grandchild_of', models.ManyToManyField(blank=True, related_name='grandparents', to='records.subject')),
                ('grandparent_of', models.ManyToManyField(blank=True, related_name='grandchildren', to='records.subject')),
                ('home_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='home_residents', to='records.address')),
                ('parent_of', models.ManyToManyField(blank=True, related_name='children', to='records.subject')),
                ('parole_officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parolees', to='records.subject')),
                ('persons_associated', models.ManyToManyField(blank=True, related_name='associated_persons', to='records.subject')),
                ('roommates_with', models.ManyToManyField(blank=True, related_name='roommates', to='records.subject')),
                ('sibling_of', models.ManyToManyField(blank=True, related_name='siblings', to='records.subject')),
                ('spouse_of', models.ManyToManyField(blank=True, related_name='spouses', to='records.subject')),
                ('work_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='records.address')),
            ],
        ),
        migrations.AddField(
            model_name='driverslicense',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers_licenses', to='records.subject'),
        ),
        migrations.AddField(
            model_name='address',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses', to='records.subject'),
        ),
        migrations.AddField(
            model_name='address',
            name='residents',
            field=models.ManyToManyField(blank=True, related_name='residences', to='records.subject'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate', models.CharField(max_length=10, unique=True)),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('registration', models.CharField(blank=True, max_length=20, null=True)),
                ('is_stolen', models.BooleanField(default=False)),
                ('outstanding_warrants', models.TextField(blank=True, null=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='records.address')),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='records.subject')),
            ],
        ),
        migrations.CreateModel(
            name='TrafficStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('outcome', models.TextField()),
                ('citation_issued', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('call', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calls.call')),
                ('officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='units.unit')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.subject')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='subject',
            name='vehicles_associated',
            field=models.ManyToManyField(blank=True, related_name='associated_people', to='records.vehicle'),
        ),
        migrations.AddField(
            model_name='subject',
            name='vehicles_owned',
            field=models.ManyToManyField(blank=True, related_name='owners', to='records.vehicle'),
        ),
    ]
